{"/home/travis/build/npmtest/node-npmtest-intercom-client/test.js":"/* istanbul instrument in package npmtest_intercom_client */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-intercom-client/lib.npmtest_intercom_client.js":"/* istanbul instrument in package npmtest_intercom_client */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_intercom_client = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_intercom_client = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-intercom-client/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-intercom-client && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_intercom_client */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_intercom_client\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_intercom_client.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_intercom_client.rollup.js'] =\n            local.assetsDict['/assets.npmtest_intercom_client.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_intercom_client.__dirname + '/lib.npmtest_intercom_client.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SecureMode = exports.User = exports.Client = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _client = require('./client');\n\nvar _client2 = _interopRequireDefault(_client);\n\nvar _user = require('./user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.Client = _client2.default;\nexports.User = _user2.default;\n\nvar SecureMode = exports.SecureMode = function () {\n  function SecureMode() {\n    _classCallCheck(this, SecureMode);\n  }\n\n  _createClass(SecureMode, null, [{\n    key: 'userHash',\n    value: function userHash(params) {\n      var secretKey = params.secretKey;\n      var identifier = params.identifier;\n      if (!secretKey) {\n        throw new Error('secretKey must be provided');\n      }\n      if (!identifier) {\n        throw new Error('identifier must be provided');\n      }\n      return _crypto2.default.createHmac('sha256', secretKey).update(identifier).digest('hex');\n    }\n  }]);\n\n  return SecureMode;\n}();","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/client.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _unirest = require('unirest');\n\nvar _unirest2 = _interopRequireDefault(_unirest);\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nvar _user = require('./user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _event = require('./event');\n\nvar _event2 = _interopRequireDefault(_event);\n\nvar _company = require('./company');\n\nvar _company2 = _interopRequireDefault(_company);\n\nvar _contact = require('./contact');\n\nvar _contact2 = _interopRequireDefault(_contact);\n\nvar _visitor = require('./visitor');\n\nvar _visitor2 = _interopRequireDefault(_visitor);\n\nvar _counts = require('./counts');\n\nvar _counts2 = _interopRequireDefault(_counts);\n\nvar _admin = require('./admin');\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nvar _tag = require('./tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _segment = require('./segment');\n\nvar _segment2 = _interopRequireDefault(_segment);\n\nvar _message = require('./message');\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _conversation = require('./conversation');\n\nvar _conversation2 = _interopRequireDefault(_conversation);\n\nvar _note = require('./note');\n\nvar _note2 = _interopRequireDefault(_note);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Client = function () {\n  function Client() {\n    _classCallCheck(this, Client);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 2) {\n      this.usernamePart = args[0];\n      this.passwordPart = args[1];\n    } else if (args.length === 1) {\n      if (args[0].token) {\n        this.usernamePart = args[0].token;\n        this.passwordPart = '';\n      } else {\n        this.usernamePart = args[0].appId;\n        this.passwordPart = args[0].appApiKey;\n      }\n    }\n    if (!this.usernamePart || this.passwordPart === undefined) {\n      throw new Error('Could not construct a client with those parameters');\n    }\n    this.users = new _user2.default(this);\n    this.events = new _event2.default(this);\n    this.companies = new _company2.default(this);\n    this.contacts = new _contact2.default(this);\n    this.leads = new _contact2.default(this);\n    this.visitors = new _visitor2.default(this);\n    this.counts = new _counts2.default(this);\n    this.admins = new _admin2.default(this);\n    this.tags = new _tag2.default(this);\n    this.segments = new _segment2.default(this);\n    this.messages = new _message2.default(this);\n    this.conversations = new _conversation2.default(this);\n    this.notes = new _note2.default(this);\n    this.promises = false;\n    this.baseUrl = 'https://api.intercom.io';\n  }\n\n  _createClass(Client, [{\n    key: 'usePromises',\n    value: function usePromises() {\n      this.promises = true;\n      return this;\n    }\n  }, {\n    key: 'useBaseUrl',\n    value: function useBaseUrl(baseUrl) {\n      this.baseUrl = baseUrl;\n      return this;\n    }\n  }, {\n    key: 'promiseProxy',\n    value: function promiseProxy(f, req) {\n      var _this = this;\n\n      if (this.promises || !f) {\n        var _ret = function () {\n          var callbackHandler = _this.callback;\n          return {\n            v: new _bluebird2.default(function (resolve, reject) {\n              var resolver = function resolver(err, data) {\n                if (err) {\n                  reject(new Error(JSON.stringify(err)));\n                } else {\n                  resolve(data);\n                }\n              };\n              req.end(function (r) {\n                return callbackHandler(resolver, r);\n              });\n            })\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n      } else {\n        req.end(function (r) {\n          return _this.callback(f, r);\n        });\n      }\n    }\n  }, {\n    key: 'ping',\n    value: function ping(f) {\n      _unirest2.default.get(this.baseUrl + '/admins').auth(this.usernamePart, this.passwordPart).type('json').header('Accept', 'application/json').header('User-Agent', 'intercom-node-client/2.0.0').end(function (r) {\n        return f(r.status);\n      });\n    }\n  }, {\n    key: 'put',\n    value: function put(endpoint, data, f) {\n      return this.promiseProxy(f, _unirest2.default.put('' + this.baseUrl + endpoint).auth(this.usernamePart, this.passwordPart).type('json').send(data).header('Accept', 'application/json').header('User-Agent', 'intercom-node-client/2.0.0'));\n    }\n  }, {\n    key: 'post',\n    value: function post(endpoint, data, f) {\n      return this.promiseProxy(f, _unirest2.default.post('' + this.baseUrl + endpoint).auth(this.usernamePart, this.passwordPart).type('json').send(data).header('Accept', 'application/json').header('User-Agent', 'intercom-node-client/2.0.0'));\n    }\n  }, {\n    key: 'get',\n    value: function get(endpoint, data, f) {\n      return this.promiseProxy(f, _unirest2.default.get('' + this.baseUrl + endpoint).auth(this.usernamePart, this.passwordPart).type('json').query(data).header('Accept', 'application/json').header('User-Agent', 'intercom-node-client/2.0.0'));\n    }\n  }, {\n    key: 'nextPage',\n    value: function nextPage(paginationObject, f) {\n      return this.promiseProxy(f, _unirest2.default.get(paginationObject.next).auth(this.usernamePart, this.passwordPart).type('json').header('Accept', 'application/json').header('User-Agent', 'intercom-node-client/2.0.0'));\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(endpoint, data, f) {\n      return this.promiseProxy(f, _unirest2.default.delete('' + this.baseUrl + endpoint).auth(this.usernamePart, this.passwordPart).type('json').query(data).header('Accept', 'application/json').header('User-Agent', 'intercom-node-client/2.0.0'));\n    }\n  }, {\n    key: 'callback',\n    value: function callback(f, data) {\n      if (!f) {\n        return;\n      }\n      if (f.length >= 2) {\n        var hasErrors = data.error || data.body && data.body.type === 'error.list';\n        if (hasErrors) {\n          f(data, null);\n        } else {\n          f(null, data);\n        }\n      } else {\n        f(data);\n      }\n    }\n  }]);\n\n  return Client;\n}();\n\nexports.default = Client;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/user.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bulk = require('./bulk');\n\nvar _bulk2 = _interopRequireDefault(_bulk);\n\nvar _scroll = require('./scroll');\n\nvar _scroll2 = _interopRequireDefault(_scroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar User = function () {\n  function User(client) {\n    _classCallCheck(this, User);\n\n    this.client = client;\n    this.scroll = new _scroll2.default(this.client, 'user');\n  }\n\n  _createClass(User, [{\n    key: 'create',\n    value: function create(data, f) {\n      return this.client.post('/users', data, f);\n    }\n  }, {\n    key: 'update',\n    value: function update(data, f) {\n      return this.create(data, f);\n    }\n  }, {\n    key: 'list',\n    value: function list(f) {\n      return this.client.get('/users', {}, f);\n    }\n  }, {\n    key: 'listBy',\n    value: function listBy(params, f) {\n      return this.client.get('/users', params, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      if (params.id) {\n        return this.client.get('/users/' + params.id, {}, f);\n      } else if (params.user_id) {\n        return this.client.get('/users', { user_id: params.user_id }, f);\n      } else if (params.email) {\n        return this.client.get('/users', { email: params.email }, f);\n      }\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(params, f) {\n      if (params.id) {\n        return this.client.delete('/users/' + params.id, {}, f);\n      } else if (params.user_id) {\n        return this.client.delete('/users', { user_id: params.user_id }, f);\n      } else if (params.email) {\n        return this.client.delete('/users', { email: params.email }, f);\n      }\n    }\n  }, {\n    key: 'bulk',\n    value: function bulk(params, f) {\n      return new _bulk2.default(this.client, 'user').bulk(params, f);\n    }\n  }]);\n\n  return User;\n}();\n\nexports.default = User;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/bulk.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bulk = function () {\n  function Bulk(client, dataType) {\n    _classCallCheck(this, Bulk);\n\n    this.client = client;\n    this.dataType = dataType;\n  }\n\n  _createClass(Bulk, [{\n    key: 'bulk',\n    value: function bulk(bulkOperations, f) {\n      var dataType = this.dataType;\n      var bulkParams = { items: [] };\n      var url = '/bulk/' + dataType + 's';\n      bulkOperations.forEach(function (params) {\n        for (var k in params) {\n          var data = params[k];\n          var method = k === 'create' ? 'post' : k;\n          if (method !== 'post' && method !== 'delete') {\n            throw new Error('Unknown bulk type: ' + method);\n          }\n          bulkParams.items.push({\n            method: method,\n            data_type: dataType,\n            data: data\n          });\n        }\n      });\n      return this.client.post(url, bulkParams, f);\n    }\n  }]);\n\n  return Bulk;\n}();\n\nexports.default = Bulk;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/scroll.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Scroll = function () {\n  function Scroll(client, dataType) {\n    _classCallCheck(this, Scroll);\n\n    this.client = client;\n    this.dataType = dataType;\n  }\n\n  _createClass(Scroll, [{\n    key: 'each',\n    value: function each(params, f) {\n      var self = this;\n      this.scroll_params = undefined;\n\n      return new _bluebird2.default(function (resolve, reject) {\n        self.eachInternal(params, f, { resolve: resolve, reject: reject });\n      });\n    }\n  }, {\n    key: 'eachInternal',\n    value: function eachInternal(params, f, promise) {\n      var self = this;\n      this.client.get(this.scrollUrl(), params).then(function (response) {\n        var result = f(response);\n        if (response.body[self.dataType + 's'].length > 0) {\n          self.scroll_param = response.body.scroll_param;\n          if (result && 'then' in result && typeof result.then === 'function') {\n            result.then(function () {\n              self.eachInternal(params, f, promise);\n            }, function (error) {\n              promise.reject(error);\n            });\n          } else {\n            self.eachInternal(params, f, promise);\n          }\n        } else {\n          promise.resolve();\n        }\n      }).catch(function (error) {\n        promise.reject(error);\n      });\n    }\n  }, {\n    key: 'scrollUrl',\n    value: function scrollUrl() {\n      var dataType = this.dataType;\n      if (typeof this.scroll_param !== 'undefined') {\n        return '/' + dataType + 's/scroll?scroll_param=' + this.scroll_param;\n      } else {\n        return '/' + dataType + 's/scroll';\n      }\n    }\n  }]);\n\n  return Scroll;\n}();\n\nexports.default = Scroll;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/event.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bulk = require('./bulk');\n\nvar _bulk2 = _interopRequireDefault(_bulk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Event = function () {\n  function Event(client) {\n    _classCallCheck(this, Event);\n\n    this.client = client;\n  }\n\n  _createClass(Event, [{\n    key: 'create',\n    value: function create(data, f) {\n      return this.client.post('/events', data, f);\n    }\n  }, {\n    key: 'listBy',\n    value: function listBy(params, f) {\n      return this.client.get('/events', params, f);\n    }\n  }, {\n    key: 'bulk',\n    value: function bulk(params, f) {\n      return new _bulk2.default(this.client, 'event').bulk(params, f);\n    }\n  }]);\n\n  return Event;\n}();\n\nexports.default = Event;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/company.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _scroll = require('./scroll');\n\nvar _scroll2 = _interopRequireDefault(_scroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Company = function () {\n  function Company(client) {\n    _classCallCheck(this, Company);\n\n    this.client = client;\n    this.scroll = new _scroll2.default(this.client, 'companie');\n  }\n\n  _createClass(Company, [{\n    key: 'create',\n    value: function create(data, f) {\n      return this.client.post('/companies', data, f);\n    }\n  }, {\n    key: 'update',\n    value: function update(data, f) {\n      return this.create(data, f);\n    }\n  }, {\n    key: 'list',\n    value: function list(f) {\n      return this.client.get('/companies', {}, f);\n    }\n  }, {\n    key: 'listBy',\n    value: function listBy(params, f) {\n      return this.client.get('/companies', params, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      return this.client.get('/companies/' + params.id, {}, f);\n    }\n  }, {\n    key: 'listUsers',\n    value: function listUsers(params, f) {\n      return this.client.get('/companies/' + params.id + '/users', {}, f);\n    }\n  }]);\n\n  return Company;\n}();\n\nexports.default = Company;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/contact.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _scroll = require('./scroll');\n\nvar _scroll2 = _interopRequireDefault(_scroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Contact = function () {\n  function Contact(client) {\n    _classCallCheck(this, Contact);\n\n    this.client = client;\n    this.scroll = new _scroll2.default(this.client, 'contact');\n  }\n\n  _createClass(Contact, [{\n    key: 'create',\n    value: function create() {\n      var parameters_or_function = arguments[0];\n      var params = {};\n      var callback = parameters_or_function;\n      if (typeof parameters_or_function !== 'function') {\n        params = parameters_or_function;\n        callback = arguments[1];\n      }\n      return this.client.post('/contacts', params, callback);\n    }\n  }, {\n    key: 'update',\n    value: function update(params, f) {\n      return this.client.post('/contacts', params, f);\n    }\n  }, {\n    key: 'list',\n    value: function list(f) {\n      return this.client.get('/contacts', {}, f);\n    }\n  }, {\n    key: 'listBy',\n    value: function listBy(params, f) {\n      return this.client.get('/contacts', params, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      if (params.id) {\n        return this.client.get('/contacts/' + params.id, {}, f);\n      } else if (params.user_id) {\n        return this.client.get('/contacts', { user_id: params.user_id }, f);\n      }\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(params, f) {\n      return this.client.delete('/contacts/' + params.id, {}, f);\n    }\n  }, {\n    key: 'convert',\n    value: function convert(params, f) {\n      return this.client.post('/contacts/convert', params, f);\n    }\n  }]);\n\n  return Contact;\n}();\n\nexports.default = Contact;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/visitor.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Visitor = function () {\n  function Visitor(client) {\n    _classCallCheck(this, Visitor);\n\n    this.client = client;\n  }\n\n  _createClass(Visitor, [{\n    key: 'update',\n    value: function update(params, f) {\n      return this.client.post('/visitors', params, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      if (params.id) {\n        return this.client.get('/visitors/' + params.id, {}, f);\n      } else if (params.user_id) {\n        return this.client.get('/visitors', { user_id: params.user_id }, f);\n      }\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(params, f) {\n      return this.client.delete('/visitors/' + params.id, {}, f);\n    }\n  }, {\n    key: 'convert',\n    value: function convert(params, f) {\n      return this.client.post('/visitors/convert', params, f);\n    }\n  }]);\n\n  return Visitor;\n}();\n\nexports.default = Visitor;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/counts.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Counts = function () {\n  function Counts(client) {\n    _classCallCheck(this, Counts);\n\n    this.client = client;\n  }\n\n  _createClass(Counts, [{\n    key: 'appCounts',\n    value: function appCounts(f) {\n      return this.client.get('/counts', {}, f);\n    }\n  }, {\n    key: 'conversationCounts',\n    value: function conversationCounts(f) {\n      return this.client.get('/counts', { type: 'conversation' }, f);\n    }\n  }, {\n    key: 'conversationAdminCounts',\n    value: function conversationAdminCounts(f) {\n      return this.client.get('/counts', { type: 'conversation', count: 'admin' }, f);\n    }\n  }, {\n    key: 'userTagCounts',\n    value: function userTagCounts(f) {\n      return this.client.get('/counts', { type: 'user', count: 'tag' }, f);\n    }\n  }, {\n    key: 'userSegmentCounts',\n    value: function userSegmentCounts(f) {\n      return this.client.get('/counts', { type: 'user', count: 'segment' }, f);\n    }\n  }, {\n    key: 'companyTagCounts',\n    value: function companyTagCounts(f) {\n      return this.client.get('/counts', { type: 'company', count: 'tag' }, f);\n    }\n  }, {\n    key: 'companySegmentCounts',\n    value: function companySegmentCounts(f) {\n      return this.client.get('/counts', { type: 'company', count: 'segment' }, f);\n    }\n  }, {\n    key: 'companyUserCounts',\n    value: function companyUserCounts(f) {\n      return this.client.get('/counts', { type: 'company', count: 'user' }, f);\n    }\n  }]);\n\n  return Counts;\n}();\n\nexports.default = Counts;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/admin.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Admin = function () {\n  function Admin(client) {\n    _classCallCheck(this, Admin);\n\n    this.client = client;\n  }\n\n  _createClass(Admin, [{\n    key: 'list',\n    value: function list(f) {\n      return this.client.get('/admins', {}, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(id, f) {\n      return this.client.get('/admins/' + id, {}, f);\n    }\n  }, {\n    key: 'me',\n    value: function me(f) {\n      return this.client.get('/me', {}, f);\n    }\n  }]);\n\n  return Admin;\n}();\n\nexports.default = Admin;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/tag.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Tag = function () {\n  function Tag(client) {\n    _classCallCheck(this, Tag);\n\n    this.client = client;\n  }\n\n  _createClass(Tag, [{\n    key: 'create',\n    value: function create(data, f) {\n      return this.client.post('/tags', data, f);\n    }\n  }, {\n    key: 'tag',\n    value: function tag(data, f) {\n      return this.client.post('/tags', data, f);\n    }\n  }, {\n    key: 'untag',\n    value: function untag(data, f) {\n      (data.users || []).forEach(function (user) {\n        return user.untag = true;\n      });\n      (data.companies || []).forEach(function (company) {\n        return company.untag = true;\n      });\n      return this.client.post('/tags', data, f);\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(params, f) {\n      return this.client.delete('/tags/' + params.id, {}, f);\n    }\n  }, {\n    key: 'list',\n    value: function list(f) {\n      return this.client.get('/tags', {}, f);\n    }\n  }]);\n\n  return Tag;\n}();\n\nexports.default = Tag;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/segment.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Segment = function () {\n  function Segment(client) {\n    _classCallCheck(this, Segment);\n\n    this.client = client;\n  }\n\n  _createClass(Segment, [{\n    key: 'list',\n    value: function list(f) {\n      return this.client.get('/segments', {}, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      return this.client.get('/segments/' + params.id, {}, f);\n    }\n  }]);\n\n  return Segment;\n}();\n\nexports.default = Segment;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/message.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Message = function () {\n  function Message(client) {\n    _classCallCheck(this, Message);\n\n    this.client = client;\n  }\n\n  _createClass(Message, [{\n    key: 'create',\n    value: function create(data, f) {\n      return this.client.post('/messages', data, f);\n    }\n  }]);\n\n  return Message;\n}();\n\nexports.default = Message;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/conversation.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Conversation = function () {\n  function Conversation(client) {\n    _classCallCheck(this, Conversation);\n\n    this.client = client;\n  }\n\n  _createClass(Conversation, [{\n    key: 'list',\n    value: function list(data, f) {\n      return this.client.get('/conversations', data, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      return this.client.get('/conversations/' + params.id, params, f);\n    }\n  }, {\n    key: 'reply',\n    value: function reply(params, f) {\n      return this.client.post('/conversations/' + params.id + '/reply', params, f);\n    }\n  }, {\n    key: 'markAsRead',\n    value: function markAsRead(params, f) {\n      return this.client.put('/conversations/' + params.id, { read: true }, f);\n    }\n  }]);\n\n  return Conversation;\n}();\n\nexports.default = Conversation;","/home/travis/build/npmtest/node-npmtest-intercom-client/node_modules/intercom-client/dist/note.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Note = function () {\n  function Note(client) {\n    _classCallCheck(this, Note);\n\n    this.client = client;\n  }\n\n  _createClass(Note, [{\n    key: 'create',\n    value: function create(params, f) {\n      return this.client.post('/notes', params, f);\n    }\n  }, {\n    key: 'list',\n    value: function list(params, f) {\n      return this.client.get('/notes', params, f);\n    }\n  }, {\n    key: 'find',\n    value: function find(params, f) {\n      return this.client.get('/notes/' + params.id, {}, f);\n    }\n  }]);\n\n  return Note;\n}();\n\nexports.default = Note;"}